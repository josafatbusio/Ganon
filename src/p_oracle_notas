/*Sample Code to Apply and Unapply On Account Credit Memos using AR_CM_API_PUB API in 11.5.10.2 and R12 [ID 753244.1]
 	Modified 13-MAY-2011     Type SAMPLE CODE     Status PUBLISHED
In this Document
  Purpose
  Software Requirements/Prerequisites
  Configuring the Sample Code
  Running the Sample Code
  Caution
  Sample Code
  Sample Code Output
  References

Applies to:

Oracle Receivables - Version: 11.5.10.2 to 12.1.3 - Release: 11.5.10 to 12.1
Information in this document applies to any platform.
*** Checked for relevance on 14-May-2010 ***
AR_CM_API_PUB
Purpose

Oracle has provided a new API AR_CM_API_PUB through which we can Apply and Unapply On-Account Credit Memos to to open Invoices / Debit Memos
Invoice Creation API AR_INVOICE_API_PUB allows creating On Account Credit Memos after applying Patch 5257046 in release 11.5.10.2 and R12.AR.A.delta.2 onwards.

Software Requirements/Prerequisites

You can use SQL PLUS /SQL*Plus / Oracle SQL Developer to run the script
Configuring the Sample Code

Run the script and create procedure in APPS schema.
Running the Sample Code

The following 2 Procedures are provided through this API:
AR_CM_API_PUB.APPLY_ON_ACCOUNT
==============================
Call this routine to apply on-account credit memos to a debit item.
Besides the standard input parameters, the API accepts the credit memo related parameters as a record type.The API needs input parameters to determine the credit memo and the debit memo transaction. If the required parameters are not passed in a call to this API, then the call will fail.

AR_CM_API_PUB.UNAPPLY_ON_ACCOUNT
================================
Call this routine to unapply on-account credit memo applied to a debit item.
Besides the standard input parameters, the API accepts the receivable application parameters as a record type. The API needs input parameters to determine the transaction to unapply. If the required parameters are not passed in a call to this API, then the call will fail.
Please refer to Note 457451.1 How to Create, Apply and Unapply On Account Credit Memos Using ar_invoice_api_pub API


Caution

This sample code is provided for educational purposes only and not supported by Oracle Support Services. It has been tested internally, however, and works as documented. We do not guarantee that it will work for you, so be sure to test it in your environment before relying on it.
Proofread this sample code before using it! Due to the differences in the way text editors, e-mail packages and operating systems handle text formatting (spaces, tabs and carriage returns), this sample code may not be in an executable state when you first receive it. Check over the sample code to ensure that errors of this type are corrected.

Sample Code

First find out user_id and RESPONSIBILITY_ID through which you will submit the program to set the context :
SELECT USER_ID,RESPONSIBILITY_ID,RESPONSIBILITY_APPLICATION_ID,
SECURITY_GROUP_ID
FROM FND_USER_RESP_GROUPS
WHERE USER_ID = (SELECT USER_ID
FROM FND_USER
WHERE USER_NAME = '&user_name')
AND RESPONSIBILITY_ID = (SELECT RESPONSIBILITY_ID
FROM FND_RESPONSIBILITY_VL
WHERE RESPONSIBILITY_NAME = '&resp_name');


Then Find out the customer_trx_id of the Invoice and Credit Memo using the following sql :

select Customer_Trx_ID
from RA_CUSTOMER_TRX_ALL
where trx_number ='&transaction_number';

The following code can be used to apply Credit Memo to Invoice :
Important parameters to be passed are Customer Trx Id of Invoice and Credit Memo, Amount applied . You can change the Apply_date and GL_date to desired value instead of sysdate.
If Receipt Application Information DFF are set then please pass the value in appropriate attributes.
*/
DECLARE
  K_api_version CONSTANT NUMBER := 1;
  K_init_msg_list CONSTANT VARCHAR2(1) := FND_API.g_false;
  K_comments CONSTANT ar_receivable_applications.comments%TYPE := 'Test';
  K_commit CONSTANT VARCHAR2(1) := FND_API.g_false;
  l_acctd_amount_applied_from ar_receivable_applications_all.
  acctd_amount_applied_from%TYPE;
  l_acctd_amount_applied_to ar_receivable_applications_all.
  acctd_amount_applied_to%TYPE;
  l_cm_app_rec AR_CM_API_PUB.cm_app_rec_type;
  l_msg_count NUMBER;
  l_msg_data VARCHAR2(255);
  l_out_rec_application_id NUMBER;
  l_return_status VARCHAR2(1);
BEGIN
-- First set the environment of the user submitting the request by submitting
-- fnd_global.apps_initialize().
-- The procedure requires three parameters
-- Fnd_Global.apps_initialize(userId,responsibilityId,applicationId)
-- replace the following code with correct value as get from sql above
  --Fnd_Global.apps_initialize(&user_Id,responsibility_Id,222)

  fnd_global.APPS_INITIALIZE (-1,20678,222,0);--,7121);
  select ra_customer_trx_s.nextval
    INTO     l_customer_trx_id
    from dual;

  l_cm_app_rec.cm_customer_trx_id := l_customer_trx_id;--&Credit_Memo_Customer_trx_id;
  l_cm_app_rec.cm_trx_number := null; -- Credit Memo Number
  l_cm_app_rec.inv_customer_trx_id := &Invoice_Customer_trx_id;
  l_cm_app_rec.inv_trx_number := null ; -- Invoice Number
  l_cm_app_rec.installment := null;
  l_cm_app_rec.applied_payment_schedule_id := null;
  l_cm_app_rec.amount_applied := &Amount_to_be_applied;
  l_cm_app_rec.apply_date := TRUNC(SYSDATE);
  l_cm_app_rec.gl_date := TRUNC(SYSDATE);
  l_cm_app_rec.inv_customer_trx_line_id := null;
  l_cm_app_rec.inv_line_number := null;
  l_cm_app_rec.show_closed_invoices := null;
  l_cm_app_rec.ussgl_transaction_code := null;
  l_cm_app_rec.attribute_category := null;
  l_cm_app_rec.attribute1 :=null ;
  l_cm_app_rec.attribute2 :=null ;
  l_cm_app_rec.attribute3 := null ;
  l_cm_app_rec.attribute4 := null;
  l_cm_app_rec.attribute5 := null;
  l_cm_app_rec.attribute6 := null;
  l_cm_app_rec.attribute7 := null;
  l_cm_app_rec.attribute8 := null;
  l_cm_app_rec.attribute9 := null;
  l_cm_app_rec.attribute10 := null;
  l_cm_app_rec.attribute11 := null;
  l_cm_app_rec.attribute12 := null;
  l_cm_app_rec.attribute13 := null;
  l_cm_app_rec.attribute14 := null;
  l_cm_app_rec.attribute15 := null;
  l_cm_app_rec.global_attribute_category := null;
  l_cm_app_rec.global_attribute1 := null;
  l_cm_app_rec.global_attribute2 := null;
  l_cm_app_rec.global_attribute3 := null;
  l_cm_app_rec.global_attribute4 := null;
  l_cm_app_rec.global_attribute5 := null;
  l_cm_app_rec.global_attribute6 := null;
  l_cm_app_rec.global_attribute7 := null;
  l_cm_app_rec.global_attribute8 := null;
  l_cm_app_rec.global_attribute9 := null;
  l_cm_app_rec.global_attribute10 := null;
  l_cm_app_rec.global_attribute11 := null;
  l_cm_app_rec.global_attribute12 := null;
  l_cm_app_rec.global_attribute12 := null;
  l_cm_app_rec.global_attribute14 := null;
  l_cm_app_rec.global_attribute15 := null;
  l_cm_app_rec.global_attribute16 := null;
  l_cm_app_rec.global_attribute17 := null;
  l_cm_app_rec.global_attribute18 := null;
  l_cm_app_rec.global_attribute19 := null;
  l_cm_app_rec.global_attribute20 := null;
  l_cm_app_rec.comments := K_comments;
  l_cm_app_rec.called_from := null;

  ar_cm_api_pub.apply_on_account( p_api_version => K_api_version
  , p_init_msg_list => K_init_msg_list
  , p_commit => K_commit
  , p_cm_app_rec => l_cm_app_rec
  , x_return_status => l_return_status
  , x_msg_count => l_msg_count
  , x_msg_data => l_msg_data
  , x_out_rec_application_id =>
          l_out_rec_application_id
  , x_acctd_amount_applied_from =>
          l_acctd_amount_applied_from
  , x_acctd_amount_applied_to =>
          l_acctd_amount_applied_to
          );
  dbms_output.put_line('return_status: '||l_return_status);
  dbms_output.put_line('msg_count: '||l_msg_count);
  dbms_output.put_line('out_rec_application_id: '||l_out_rec_application_id);
  dbms_output.put_line('acctd_amount_applied_from: '|| l_acctd_amount_applied_from);
  dbms_output.put_line('acctd_amount_applied_to: '|| l_acctd_amount_applied_to);
  IF l_msg_count = 1 THEN
  dbms_output.put_line(l_msg_data);
    ELSIF l_msg_count > 1 THEN
    FOR I IN 1..l_msg_count
    LOOP
    dbms_output.put_line(I||'. '||SubStr(FND_MSG_PUB.Get(p_encoded => FND_API.
    G_FALSE ), 1, 255));
    END LOOP;
  END IF;
END;
